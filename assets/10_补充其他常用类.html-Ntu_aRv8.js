const n=JSON.parse('{"key":"v-399edb32","path":"/java/java-se/10_%E8%A1%A5%E5%85%85%E5%85%B6%E4%BB%96%E5%B8%B8%E7%94%A8%E7%B1%BB.html","title":"10. 补充其他常用类型","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"10. 补充其他常用类型","description":"Java的基本-补充其他常用类型","author":"景天","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/java/java-se/10_%E8%A1%A5%E5%85%85%E5%85%B6%E4%BB%96%E5%B8%B8%E7%94%A8%E7%B1%BB.html"}],["meta",{"property":"og:site_name","content":"Index Team"}],["meta",{"property":"og:title","content":"10. 补充其他常用类型"}],["meta",{"property":"og:description","content":"Java的基本-补充其他常用类型"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-16T02:17:19.000Z"}],["meta",{"property":"article:author","content":"景天"}],["meta",{"property":"article:modified_time","content":"2024-02-16T02:17:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"10. 补充其他常用类型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-16T02:17:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"景天\\"}]}"]]},"headers":[{"level":2,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":2,"title":"包装类型特点","slug":"包装类型特点","link":"#包装类型特点","children":[]},{"level":2,"title":"基本数据类型与包装类型的相互转换","slug":"基本数据类型与包装类型的相互转换","link":"#基本数据类型与包装类型的相互转换","children":[]},{"level":2,"title":"包装类型和String类型的相互转换","slug":"包装类型和string类型的相互转换","link":"#包装类型和string类型的相互转换","children":[]},{"level":2,"title":"包装类的常用方法","slug":"包装类的常用方法","link":"#包装类的常用方法","children":[]},{"level":2,"title":"Integer的缓存机制","slug":"integer的缓存机制","link":"#integer的缓存机制","children":[]},{"level":2,"title":"Integer的一些面试问题","slug":"integer的一些面试问题","link":"#integer的一些面试问题","children":[]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[{"level":3,"title":"整型包装类型对象相等的比较","slug":"整型包装类型对象相等的比较","link":"#整型包装类型对象相等的比较","children":[]},{"level":3,"title":"浮点型包装类型对象相等的比较","slug":"浮点型包装类型对象相等的比较","link":"#浮点型包装类型对象相等的比较","children":[]},{"level":3,"title":"布尔型对象相等的比较","slug":"布尔型对象相等的比较","link":"#布尔型对象相等的比较","children":[]}]},{"level":2,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":2,"title":"引入","slug":"引入","link":"#引入","children":[]},{"level":2,"title":"枚举的两种实现方式","slug":"枚举的两种实现方式","link":"#枚举的两种实现方式","children":[{"level":3,"title":"自定义类实现枚举","slug":"自定义类实现枚举","link":"#自定义类实现枚举","children":[]},{"level":3,"title":"使用enum关键字实现枚举","slug":"使用enum关键字实现枚举","link":"#使用enum关键字实现枚举","children":[]}]},{"level":2,"title":"时间戳","slug":"时间戳","link":"#时间戳","children":[]},{"level":2,"title":"构造方法","slug":"构造方法","link":"#构造方法","children":[]},{"level":2,"title":"成员方法","slug":"成员方法","link":"#成员方法","children":[]},{"level":2,"title":"构造方法","slug":"构造方法-1","link":"#构造方法-1","children":[]},{"level":2,"title":"成员方法","slug":"成员方法-1","link":"#成员方法-1","children":[]}],"git":{"createdTime":1708049839000,"updatedTime":1708049839000,"contributors":[{"name":"LSauce","email":"ls_satan@qq.com","commits":1}]},"readingTime":{"minutes":20.42,"words":6125},"filePathRelative":"java/java-se/10_补充其他常用类.md","localizedDate":"2024年2月16日","excerpt":"<h1> Java包装类型</h1>\\n<p>查看下列代码，请回答下列代码的执行结果是什么？</p>\\n<p>包装类相关引例</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">int</span> end <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Integer</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">MAX_VALUE</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">int</span> start <span class=\\"token operator\\">=</span> end <span class=\\"token operator\\">-</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> args<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">int</span> count <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> start<span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;=</span> end<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n\\t\\tcount<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n\\t <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>count<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};
