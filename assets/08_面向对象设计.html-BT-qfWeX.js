const n=JSON.parse('{"key":"v-a1cbea1c","path":"/java/java-se/08_%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1.html","title":"08. 面向对象设计","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"08. 面向对象设计","description":"Java的基本-面向对象设计","author":"景天","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/java/java-se/08_%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1.html"}],["meta",{"property":"og:site_name","content":"Index Team"}],["meta",{"property":"og:title","content":"08. 面向对象设计"}],["meta",{"property":"og:description","content":"Java的基本-面向对象设计"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-16T02:17:19.000Z"}],["meta",{"property":"article:author","content":"景天"}],["meta",{"property":"article:modified_time","content":"2024-02-16T02:17:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"08. 面向对象设计\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-16T02:17:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"景天\\"}]}"]]},"headers":[{"level":2,"title":"引例","slug":"引例","link":"#引例","children":[]},{"level":2,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":2,"title":"特点与使用","slug":"特点与使用","link":"#特点与使用","children":[]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]},{"level":2,"title":"练习","slug":"练习","link":"#练习","children":[]},{"level":2,"title":"引例","slug":"引例-1","link":"#引例-1","children":[]},{"level":2,"title":"定义","slug":"定义-1","link":"#定义-1","children":[]},{"level":2,"title":"优点","slug":"优点","link":"#优点","children":[]},{"level":2,"title":"特点和使用","slug":"特点和使用","link":"#特点和使用","children":[]},{"level":2,"title":"extends VS implements","slug":"extends-vs-implements","link":"#extends-vs-implements","children":[]},{"level":2,"title":"默认方法和静态方法","slug":"默认方法和静态方法","link":"#默认方法和静态方法","children":[]},{"level":2,"title":"练习","slug":"练习-1","link":"#练习-1","children":[]},{"level":2,"title":"方法的形参和返回值类型","slug":"方法的形参和返回值类型","link":"#方法的形参和返回值类型","children":[{"level":3,"title":"方法传值","slug":"方法传值","link":"#方法传值","children":[]},{"level":3,"title":"方法的返回值","slug":"方法的返回值","link":"#方法的返回值","children":[]},{"level":3,"title":"方法重写中的返回值类型问题","slug":"方法重写中的返回值类型问题","link":"#方法重写中的返回值类型问题","children":[]}]},{"level":2,"title":"链式调用","slug":"链式调用","link":"#链式调用","children":[]},{"level":2,"title":"引例","slug":"引例-2","link":"#引例-2","children":[]},{"level":2,"title":"定义与分类","slug":"定义与分类","link":"#定义与分类","children":[]},{"level":2,"title":"成员内部类","slug":"成员内部类","link":"#成员内部类","children":[{"level":3,"title":"自身特点","slug":"自身特点","link":"#自身特点","children":[]},{"level":3,"title":"成员内部类的访问特点","slug":"成员内部类的访问特点","link":"#成员内部类的访问特点","children":[]},{"level":3,"title":"练习","slug":"练习-2","link":"#练习-2","children":[]}]},{"level":2,"title":"静态内部类","slug":"静态内部类","link":"#静态内部类","children":[{"level":3,"title":"自身特点","slug":"自身特点-1","link":"#自身特点-1","children":[]},{"level":3,"title":"静态内部类访问特点","slug":"静态内部类访问特点","link":"#静态内部类访问特点","children":[]},{"level":3,"title":"注意事项","slug":"注意事项-1","link":"#注意事项-1","children":[]},{"level":3,"title":"练习","slug":"练习-3","link":"#练习-3","children":[]}]},{"level":2,"title":"局部内部类","slug":"局部内部类","link":"#局部内部类","children":[{"level":3,"title":"自身特点","slug":"自身特点-2","link":"#自身特点-2","children":[]},{"level":3,"title":"局部内部类的访问特点","slug":"局部内部类的访问特点","link":"#局部内部类的访问特点","children":[]},{"level":3,"title":"局部内部类的经典使用","slug":"局部内部类的经典使用","link":"#局部内部类的经典使用","children":[]},{"level":3,"title":"注意事项","slug":"注意事项-2","link":"#注意事项-2","children":[]}]},{"level":2,"title":"内部类的优缺点和使用场景","slug":"内部类的优缺点和使用场景","link":"#内部类的优缺点和使用场景","children":[]},{"level":2,"title":"内部类对象","slug":"内部类对象","link":"#内部类对象","children":[{"level":3,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":3,"title":"匿名内部类","slug":"匿名内部类","link":"#匿名内部类","children":[]},{"level":3,"title":"lambda表达式","slug":"lambda表达式","link":"#lambda表达式","children":[]}]}],"git":{"createdTime":1708049839000,"updatedTime":1708049839000,"contributors":[{"name":"LSauce","email":"ls_satan@qq.com","commits":1}]},"readingTime":{"minutes":58.89,"words":17668},"filePathRelative":"java/java-se/08_面向对象设计.md","localizedDate":"2024年2月16日","excerpt":"<h1> 抽象类</h1>\\n<p>学习目标:</p>\\n<ul>\\n<li>掌握抽象类的定义</li>\\n<li>掌握抽象类的特点与使用</li>\\n</ul>\\n<h2> 引例</h2>\\n<p>以下猫狗继承案例，是一个非常基础的继承语法的代码。思考一下Animal类的继承体系，有什么问题吗？</p>\\n<p>从以下两个角度分析：</p>\\n<ol>\\n<li>从代码角度上，有没有冗余代码？</li>\\n<li>从设计角度上，在这个案例中，会存在一个动物对象吗？</li>\\n</ol>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Animal</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">shout</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"动物叫\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Cat</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">Animal</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">shout</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"猫叫\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Dog</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">Animal</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">shout</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"狗叫\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};
