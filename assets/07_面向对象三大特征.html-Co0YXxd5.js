const l=JSON.parse('{"key":"v-51c0dec7","path":"/java/java-se/07_%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B8%89%E5%A4%A7%E7%89%B9%E5%BE%81.html","title":"07. 面向对象的三大特征","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"07. 面向对象的三大特征","description":"Java的基本介绍-面向对象的三大特征","author":"景天","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/java/java-se/07_%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B8%89%E5%A4%A7%E7%89%B9%E5%BE%81.html"}],["meta",{"property":"og:site_name","content":"Index Team"}],["meta",{"property":"og:title","content":"07. 面向对象的三大特征"}],["meta",{"property":"og:description","content":"Java的基本介绍-面向对象的三大特征"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-16T02:17:19.000Z"}],["meta",{"property":"article:author","content":"景天"}],["meta",{"property":"article:modified_time","content":"2024-02-16T02:17:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"07. 面向对象的三大特征\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-16T02:17:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"景天\\"}]}"]]},"headers":[{"level":2,"title":"封装","slug":"封装","link":"#封装","children":[]},{"level":2,"title":"继承","slug":"继承","link":"#继承","children":[]},{"level":2,"title":"多态","slug":"多态","link":"#多态","children":[]},{"level":2,"title":"概述","slug":"概述-1","link":"#概述-1","children":[]},{"level":2,"title":"封装实现步骤","slug":"封装实现步骤","link":"#封装实现步骤","children":[]},{"level":2,"title":"封装练习","slug":"封装练习","link":"#封装练习","children":[]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]},{"level":2,"title":"引例","slug":"引例","link":"#引例","children":[]},{"level":2,"title":"语法定义","slug":"语法定义","link":"#语法定义","children":[]},{"level":2,"title":"继承中两个类的关系","slug":"继承中两个类的关系","link":"#继承中两个类的关系","children":[{"level":3,"title":"两个类的命名","slug":"两个类的命名","link":"#两个类的命名","children":[]},{"level":3,"title":"从属关系(重点)","slug":"从属关系-重点","link":"#从属关系-重点","children":[]}]},{"level":2,"title":"引用数据类型的类型转换(重点)","slug":"引用数据类型的类型转换-重点","link":"#引用数据类型的类型转换-重点","children":[{"level":3,"title":"引用数据类型转换的前提","slug":"引用数据类型转换的前提","link":"#引用数据类型转换的前提","children":[]},{"level":3,"title":"转换的是什么？","slug":"转换的是什么","link":"#转换的是什么","children":[]},{"level":3,"title":"引用数据类型转换分类","slug":"引用数据类型转换分类","link":"#引用数据类型转换分类","children":[]}]},{"level":2,"title":"继承的优缺点","slug":"继承的优缺点","link":"#继承的优缺点","children":[]},{"level":2,"title":"继承的层次(重点)","slug":"继承的层次-重点","link":"#继承的层次-重点","children":[{"level":3,"title":"单继承","slug":"单继承","link":"#单继承","children":[]},{"level":3,"title":"继承层级","slug":"继承层级","link":"#继承层级","children":[]}]},{"level":2,"title":"protected访问权限","slug":"protected访问权限","link":"#protected访问权限","children":[{"level":3,"title":"怎么理解不同包子类能够访问","slug":"怎么理解不同包子类能够访问","link":"#怎么理解不同包子类能够访问","children":[]},{"level":3,"title":"结论","slug":"结论","link":"#结论","children":[]},{"level":3,"title":"为什么设置protectd访问权限","slug":"为什么设置protectd访问权限","link":"#为什么设置protectd访问权限","children":[]},{"level":3,"title":"经典案例","slug":"经典案例","link":"#经典案例","children":[]}]},{"level":2,"title":"继承的限制","slug":"继承的限制","link":"#继承的限制","children":[]},{"level":2,"title":"子类对象的初始化(重点)","slug":"子类对象的初始化-重点","link":"#子类对象的初始化-重点","children":[{"level":3,"title":"子类对象初始化流程","slug":"子类对象初始化流程","link":"#子类对象初始化流程","children":[]},{"level":3,"title":"隐式子类对象初始化","slug":"隐式子类对象初始化","link":"#隐式子类对象初始化","children":[]},{"level":3,"title":"显示子类对象初始化","slug":"显示子类对象初始化","link":"#显示子类对象初始化","children":[]},{"level":3,"title":"super关键字","slug":"super关键字","link":"#super关键字","children":[]},{"level":3,"title":"练习","slug":"练习","link":"#练习","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]},{"level":2,"title":"继承中的属性隐藏","slug":"继承中的属性隐藏","link":"#继承中的属性隐藏","children":[{"level":3,"title":"引例","slug":"引例-1","link":"#引例-1","children":[]},{"level":3,"title":"对象名.成员变量的访问机制","slug":"对象名-成员变量的访问机制","link":"#对象名-成员变量的访问机制","children":[]},{"level":3,"title":"属性隐藏","slug":"属性隐藏","link":"#属性隐藏","children":[]}]},{"level":2,"title":"继承中的方法覆盖","slug":"继承中的方法覆盖","link":"#继承中的方法覆盖","children":[{"level":3,"title":"引例","slug":"引例-2","link":"#引例-2","children":[]},{"level":3,"title":"对象名.成员方法的访问机制","slug":"对象名-成员方法的访问机制","link":"#对象名-成员方法的访问机制","children":[]},{"level":3,"title":"方法的覆盖/重写","slug":"方法的覆盖-重写","link":"#方法的覆盖-重写","children":[]}]},{"level":2,"title":"final关键字","slug":"final关键字","link":"#final关键字","children":[{"level":3,"title":"final修饰类","slug":"final修饰类","link":"#final修饰类","children":[]},{"level":3,"title":"final修饰方法","slug":"final修饰方法","link":"#final修饰方法","children":[]},{"level":3,"title":"final修饰变量","slug":"final修饰变量","link":"#final修饰变量","children":[]},{"level":3,"title":"练习","slug":"练习-2","link":"#练习-2","children":[]}]},{"level":2,"title":"概述","slug":"概述-2","link":"#概述-2","children":[{"level":3,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":3,"title":"多态的发生条件","slug":"多态的发生条件","link":"#多态的发生条件","children":[]},{"level":3,"title":"不能发生多态的场景","slug":"不能发生多态的场景","link":"#不能发生多态的场景","children":[]}]},{"level":2,"title":"多态的访问特征","slug":"多态的访问特征","link":"#多态的访问特征","children":[{"level":3,"title":"成员变量","slug":"成员变量","link":"#成员变量","children":[]},{"level":3,"title":"成员方法","slug":"成员方法","link":"#成员方法","children":[]}]},{"level":2,"title":"多态的优缺点","slug":"多态的优缺点","link":"#多态的优缺点","children":[{"level":3,"title":"优点","slug":"优点","link":"#优点","children":[]},{"level":3,"title":"缺点","slug":"缺点","link":"#缺点","children":[]}]},{"level":2,"title":"引用数据类型的强制类型转换","slug":"引用数据类型的强制类型转换","link":"#引用数据类型的强制类型转换","children":[{"level":3,"title":"前提","slug":"前提","link":"#前提","children":[]},{"level":3,"title":"instanceof关键字","slug":"instanceof关键字","link":"#instanceof关键字","children":[]},{"level":3,"title":"总结","slug":"总结-3","link":"#总结-3","children":[]}]},{"level":2,"title":"多态练习","slug":"多态练习","link":"#多态练习","children":[]}],"git":{"createdTime":1708049839000,"updatedTime":1708049839000,"contributors":[{"name":"LSauce","email":"ls_satan@qq.com","commits":1}]},"readingTime":{"minutes":62.94,"words":18881},"filePathRelative":"java/java-se/07_面向对象三大特征.md","localizedDate":"2024年2月16日","excerpt":"<h1> 概述</h1>\\n<h2> 封装</h2>\\n<p>​\\t\\t封装就是面向对象的核心思想，将对象的属性和行为封装起来，不需要让外界知道具体的实现细节。例如，用户使用手机，只需要在屏幕上滑动点击就可以了，无须知道手机内部时如何工作的。</p>\\n<h2> 继承</h2>\\n<p>​\\t\\t继承主要描述的是类与类之间的关系，通过继承，可以在无需编写原有类的情况下，对原有类的功能进行扩展。例如，有一个汽车类，该类中描述了汽车的普通属性和功能。汽车有很多类型，轿车，卡车，越野，SUV等，那么在一个轿车类中，不仅应该包含汽车的属性和功能，还应该增加轿车独有的属性和功能，这时，可以让桥车继承汽车类，在轿车类中添加轿车特有的功能和属性就可以了。继承不仅增强了代码的复用性，提高了开发效率，还为程序的维护补充提供了便利。</p>"}');export{l as data};
